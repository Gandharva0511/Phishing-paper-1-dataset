# -*- coding: utf-8 -*-
"""Phishing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-qtUtTNi9FQdkrYAhLu3iofMP9jrPvCJ
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import cross_val_score
from sklearn.linear_model import LogisticRegression
from sklearn import tree
from sklearn.svm import SVC
import os
from google.colab import drive
drive.mount('/content/drive')

class phishing:
    
    # Research paper1
    def svc(self,train):
        sns.countplot(train['Phishing Status'])
        g = sns.pairplot(train,hue='Phishing Status',vars=['Total Number of Characters C','Unique Words','Vocabulary richness W/C',
                             'Total number of Function words/W','Phishing Status'])
        X = train.drop('Phishing Status',axis = 1)
        y = train['Phishing Status']
        svclassifier = SVC(kernel='linear',C=1)
        scores = cross_val_score(svclassifier, X, y, cv=5,scoring='accuracy')
        return(scores.mean())
        scores = cross_val_score(svclassifier,X,y,cv=5,scoring='f1_macro')
        return(scores.mean())
    
    #Research paper2
    def decisiontree(self,train):
        sns.countplot(train['Phishing Status'])
        X = train.drop('Phishing Status',axis = 1)
        y = train['Phishing Status']
        decclassifier = tree.DecisionTreeClassifier()
        scores = cross_val_score(decclassifier, X, y, cv=5,scoring='accuracy')
        return(scores.mean())
        scores = cross_val_score(decclassifier, X, y, cv=5,scoring='f1_macro')
        return(scores.mean())
        

    def logisticreg(self,train):
       sns.countplot(train['Phishing Status'])
       X = train.drop('Phishing Status',axis = 1)
       y = train['Phishing Status']   
       logreg = LogisticRegression()
       scores = cross_val_score(logreg, X, y, cv=5,scoring='accuracy')
       return(scores.mean())
       scores = cross_val_score(logreg, X, y, cv=5,scoring='f1_macro')
       return(scores.mean())

# Creation of Object     
path = "/content/drive/My Drive/data/Phishing_paper1.csv"
train = pd.read_csv(path)
ph = phishing()    
ph.svc(train)
ph.decisiontree(train)
ph.logisticreg(train)